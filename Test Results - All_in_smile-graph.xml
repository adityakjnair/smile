<?xml version="1.0" encoding="UTF-8"?><testrun duration="44" footerText="Generated by IntelliJ IDEA on 11/20/18 5:10 PM" name="All in smile-graph">
    <count name="total" value="27"/>
    <count name="passed" value="27"/>
    <config nameIsGenerated="true" configId="JUnit" name="All in smile-graph">
        <module name="smile-graph"/>
        <option name="PACKAGE_NAME" value=""/>
        <option name="TEST_OBJECT" value="package"/>
    </config>
    <root name="&lt;default package&gt;" location="java:suite://&lt;default package&gt;">
        <output type="stdout">/Library/Java/JavaVirtualMachines/jdk-11.jdk/Contents/Home/bin/java -ea -Didea.test.cyclic.buffer.size=1048576 &amp;quot;-javaagent:/Applications/IntelliJ IDEA CE.app/Contents/lib/idea_rt.jar=60597:/Applications/IntelliJ IDEA CE.app/Contents/bin&amp;quot; -Dfile.encoding=UTF-8 -classpath &amp;quot;/Applications/IntelliJ IDEA CE.app/Contents/lib/idea_rt.jar:/Applications/IntelliJ IDEA CE.app/Contents/plugins/junit/lib/junit-rt.jar:/Applications/IntelliJ IDEA CE.app/Contents/plugins/junit/lib/junit5-rt.jar:/Users/yueyang/eclipse-workspace/smile-git/graph/target/test-classes:/Users/yueyang/eclipse-workspace/smile-git/graph/target/classes:/Users/yueyang/eclipse-workspace/smile-git/math/target/classes:/Users/yueyang/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/Users/yueyang/.m2/repository/org/slf4j/slf4j-simple/1.7.25/slf4j-simple-1.7.25.jar:/Users/yueyang/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/yueyang/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/yueyang/.m2/repository/com/novocode/junit-interface/0.11/junit-interface-0.11.jar:/Users/yueyang/.m2/repository/org/scala-sbt/test-interface/1.0/test-interface-1.0.jar&amp;quot; com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 @w@/private/var/folders/kz/558_73xs4h7_ct4pj1wsvrch0000gn/T/idea_working_dirs_junit1.tmp @/private/var/folders/kz/558_73xs4h7_ct4pj1wsvrch0000gn/T/idea_junit1.tmp -socket60596
Process finished with exit code 0
</output>
    </root>
    <suite duration="37" locationUrl="java:suite://smile.graph.AdjacencyListTest" name="AdjacencyListTest" status="passed">
        <test duration="1" locationUrl="java:test://smile.graph.AdjacencyListTest/testGetOutdegree" name="AdjacencyListTest.testGetOutdegree" status="passed">
            <output type="stdout">getOutdegree
</output>
        </test>
        <test duration="32" locationUrl="java:test://smile.graph.AdjacencyListTest/testBfs" name="AdjacencyListTest.testBfs" status="passed">
            <output type="stdout">bfs sort
</output>
        </test>
        <test duration="0" locationUrl="java:test://smile.graph.AdjacencyListTest/testDfs" name="AdjacencyListTest.testDfs" status="passed">
            <output type="stdout">dfs sort
</output>
        </test>
        <test duration="0" locationUrl="java:test://smile.graph.AdjacencyListTest/testBfs2" name="AdjacencyListTest.testBfs2" status="passed">
            <output type="stdout">bfs connected component
</output>
        </test>
        <test duration="1" locationUrl="java:test://smile.graph.AdjacencyListTest/testDfs2" name="AdjacencyListTest.testDfs2" status="passed">
            <output type="stdout">dfs connected component
</output>
        </test>
        <test duration="0" locationUrl="java:test://smile.graph.AdjacencyListTest/testRemoveEdge_GraphEdge" name="AdjacencyListTest.testRemoveEdge_GraphEdge" status="passed">
            <output type="stdout">removeEdge
</output>
        </test>
        <test duration="1" locationUrl="java:test://smile.graph.AdjacencyListTest/testIsConnected" name="AdjacencyListTest.testIsConnected" status="passed">
            <output type="stdout">isConnected
</output>
        </test>
        <test duration="2" locationUrl="java:test://smile.graph.AdjacencyListTest/testDijkstra" name="AdjacencyListTest.testDijkstra" status="passed">
            <output type="stdout">Dijkstra
</output>
        </test>
        <test duration="0" locationUrl="java:test://smile.graph.AdjacencyListTest/testRemoveEdge_int_int" name="AdjacencyListTest.testRemoveEdge_int_int" status="passed">
            <output type="stdout">removeEdge
</output>
        </test>
        <test duration="0" locationUrl="java:test://smile.graph.AdjacencyListTest/testGetDegree" name="AdjacencyListTest.testGetDegree" status="passed">
            <output type="stdout">getDegree
</output>
        </test>
        <test duration="0" locationUrl="java:test://smile.graph.AdjacencyListTest/testSetWeight" name="AdjacencyListTest.testSetWeight" status="passed">
            <output type="stdout">setWeight
</output>
        </test>
        <test duration="0" locationUrl="java:test://smile.graph.AdjacencyListTest/testGetIndegree" name="AdjacencyListTest.testGetIndegree" status="passed">
            <output type="stdout">getIndegree
</output>
        </test>
        <test duration="0" locationUrl="java:test://smile.graph.AdjacencyListTest/testGetWeight" name="AdjacencyListTest.testGetWeight" status="passed">
            <output type="stdout">getWeight
</output>
        </test>
    </suite>
    <suite duration="7" locationUrl="java:suite://smile.graph.AdjacencyMatrixTest" name="AdjacencyMatrixTest" status="passed">
        <test duration="0" locationUrl="java:test://smile.graph.AdjacencyMatrixTest/testGetOutdegree" name="AdjacencyMatrixTest.testGetOutdegree" status="passed">
            <output type="stdout">getOutdegree
</output>
        </test>
        <test duration="0" locationUrl="java:test://smile.graph.AdjacencyMatrixTest/testBfs" name="AdjacencyMatrixTest.testBfs" status="passed">
            <output type="stdout">bfs sort
</output>
        </test>
        <test duration="1" locationUrl="java:test://smile.graph.AdjacencyMatrixTest/testDfs" name="AdjacencyMatrixTest.testDfs" status="passed">
            <output type="stdout">dfs sort
</output>
        </test>
        <test duration="0" locationUrl="java:test://smile.graph.AdjacencyMatrixTest/testBfs2" name="AdjacencyMatrixTest.testBfs2" status="passed">
            <output type="stdout">bfs connected component
</output>
        </test>
        <test duration="1" locationUrl="java:test://smile.graph.AdjacencyMatrixTest/testDfs2" name="AdjacencyMatrixTest.testDfs2" status="passed">
            <output type="stdout">dfs connected component
</output>
        </test>
        <test duration="1" locationUrl="java:test://smile.graph.AdjacencyMatrixTest/testRemoveEdge_GraphEdge" name="AdjacencyMatrixTest.testRemoveEdge_GraphEdge" status="passed">
            <output type="stdout">removeEdge
</output>
        </test>
        <test duration="1" locationUrl="java:test://smile.graph.AdjacencyMatrixTest/testIsConnected" name="AdjacencyMatrixTest.testIsConnected" status="passed">
            <output type="stdout">isConnected
</output>
        </test>
        <test duration="1" locationUrl="java:test://smile.graph.AdjacencyMatrixTest/testPushRelabel" name="AdjacencyMatrixTest.testPushRelabel" status="passed">
            <output type="stdout">Push-Relabel
</output>
        </test>
        <test duration="2" locationUrl="java:test://smile.graph.AdjacencyMatrixTest/testDijkstra" name="AdjacencyMatrixTest.testDijkstra" status="passed">
            <output type="stdout">Dijkstra
</output>
        </test>
        <test duration="0" locationUrl="java:test://smile.graph.AdjacencyMatrixTest/testRemoveEdge_int_int" name="AdjacencyMatrixTest.testRemoveEdge_int_int" status="passed">
            <output type="stdout">removeEdge
</output>
        </test>
        <test duration="0" locationUrl="java:test://smile.graph.AdjacencyMatrixTest/testGetDegree" name="AdjacencyMatrixTest.testGetDegree" status="passed">
            <output type="stdout">getDegree
</output>
        </test>
        <test duration="0" locationUrl="java:test://smile.graph.AdjacencyMatrixTest/testSetWeight" name="AdjacencyMatrixTest.testSetWeight" status="passed">
            <output type="stdout">setWeight
</output>
        </test>
        <test duration="0" locationUrl="java:test://smile.graph.AdjacencyMatrixTest/testGetIndegree" name="AdjacencyMatrixTest.testGetIndegree" status="passed">
            <output type="stdout">getIndegree
</output>
        </test>
        <test duration="0" locationUrl="java:test://smile.graph.AdjacencyMatrixTest/testGetWeight" name="AdjacencyMatrixTest.testGetWeight" status="passed">
            <output type="stdout">getWeight
</output>
        </test>
    </suite>
</testrun>
